doctype html
html
    head
        title hii
        link(href='https://prod.kr/css/reset.css' rel='stylesheet')
        link(href='https://prod.kr/css/base.css' rel='stylesheet')
        script(src="https://extension-files.twitch.tv/helper/v1/twitch-ext.min.js")
        script(src="https://prod.kr/js/common_manual.js")
        script(src="https://prod.kr/js/base.js")
    body(style="margin: 0")
        .extension
            form#form
                fieldset
                    legend Detection Types
                    input#channel(type="hidden", name="channel")
                    div
                        input#click(type='checkbox', name='click', value='click')
                        label(for='click') Click
                    div
                        input#drag(type='checkbox', name='drag', value='drag')
                        label(for='drag') Drag
                    div
                        input#release(type='checkbox', name='release', value='release')
                        label(for='release') Release
                    div
                        input#hover(type='checkbox', name='hover', value='hover')
                        label(for='hover') Hover
                    div
                        input#mobile(type='checkbox', name='mobile', value='mobile')
                        label(for='mobile') Mobile
                    div
                        input#shover(type='number', name='shover', value='shover')
                        label(for='shover') Hover Sensitivity
                    div
                        input#sdrag(type='number', name='sdrag', value='sdrag')
                        label(for='sdrag') Drag Sensitivity
                    div
                        input#color(type='text', name='color', value='color')
                        label(for='color') Color
                    input#submit(type='button', value='Submit')
                    p#status
        style.
            #form { 
                background-color: rgba(0, 0, 0, 0.5);
                color: white;
                margin: 64px;
                padding: 64px;
                font-family: 'roobert', sans-serif;
                font-size: 150%;
            }
            label { margin-left: 16px; }
            input[type="checkbox"] { transform: scale(1.5) translate(0, -4px); }
            fieldset > div { margin: 4px; }
            input[type="button"] { 
                margin: 4px 0; 
                color: white; 
                border-radius: 4px;
                padding: 8px;
                background-color: rgba(0, 0, 0, 0.5);
            }
            input[type="button"]:hover { background-color: rgba(0, 0, 0, 0.8); }
            input[type="button"]:active { background-color: rgba(255, 255, 255, 0.5); }
        script.
            let channel, ws, config;
            window.Twitch.ext.onAuthorized(async auth => {
                e("submit").addEventListener("pointerup", submit);
                channel = auth.channelId;
                e("channel").value = channel;
                config = await (await fetch("https://heat.prod.kr/" + channel + "/config")).json()
                for (const type of config.detections) e(type).checked = true;
                e("shover").value = config.sensitivity[0]; e("sdrag").value = config.sensitivity[1];
                e("color").value = config.color ?? "red";
            });

            async function submit() {
                config = {
                    detections: q("input[type='checkbox']").filter(x => x.checked).map(x => x.id),
                    sensitivity: [e("shover").value, e("sdrag").value],
                    color: e("color").value
                };
                await fetch("https://heat.prod.kr/" + channel + "/config?config=" + utow(JSON.stringify(config)), { method: "POST" });
                e("status").innerText = "Config Updated!"
            }