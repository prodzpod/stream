extends ../template/base.pugtemplate

block meta
    - v = true
    - title = 'the lore'
    - description = 'the archives of prodzpod'
block body 
    p TIP: Click the <u>underlined text</u> to <em>/ponder/</em>...
    h1 The Lore 
    p Welcome to <em>the pod</em>, see the <a href="https://prod.kr/v">v page</a> for the setting and introduction of myself but we do go live every <em class='time'>Thursday 20:00 GMT</em>.
    p we give way too much control to the viewers, talk in an unapologetically insane manner and <u>barely program</u>.
    h2 The Gizmo
    p one of the main feature of the broadcast is the high-effort homemade gizmo (the Monstrous Project) we have going on. the source of this project is available under <a href="https://github.com/prodzpod/stream">github</a>.
    h3: a(href="https://prod.kr/discord") The Discord 
    p Our discord has a single channel (kind of) and is fully connected with Twitch Chat. by logging in within discord, you can also execute twitch commands within the discord server.
    p Additionally, thanks to <a href="https://colonq.computer">our progenitor</a>, the same channel is also <u>available under IRC</u> through <em>colonq.computer:26697</em> (over TLS) at <em>#prodarea</em> channel.
    p you can also use the stream commands FROM colonq.computer irc via <em>!loginirc</em>.
    h3: a(href="https://prod.kr/v/screen") The Screen
    p The Screen is a replication of the broadcast where you can interact with the desktop. after logging in via typing the !login command on the twitch chat, you can utilize the screen in various ways.
    p <em>point</em>: make a pointer on screen. when used over prod, it does the twitch headpat thing.
    p <em>click</em>: click on the screen. this can be used to straighten or close windows, turn prod into 2d, or drop chat window into z-fighting hell.
    p <em>fling</em>: drag windows and prod around, throw chat messages and windows as well.
    p <em>spawn window</em>: spawns a window with title and content. you can also spawn a special window by typing <em>Joel</em> or using the <em>!song</em> command.
    p <em>kill</em>: removes all windows in this position.
    p <em>pin</em>: fixes window from moving or falling. can be reversed by flinging.
    h3 Twitch Commands
    p All the screen commands can also be used in twitch chat directly without logging in (TBD). we also have some extra commands.
    p <em>!removetriangle [number]</em>: removes a random triangle from prod (3d).
    p <em>!song</em>: spawns a media window that plays song based on a superset of <a href="https://pub.colonq.computer/~bezelea/bells/">Bells of Bezelea</a> that supports <u>multiple instruments and some extra compression</u>.
    p <em>!furrowthemareofeidola</em>: "chase idol dream", creates a window of your profile picture on stream.
    p <em>!gravity [up/down/left/right]</em>: throws all open windows and objects into one direction.
    h2 The actual glossary part of the website 
    p due to prod's insane speeches, we get some words that might be wholly unintelligible for many. this is a compilation.
    p a lot of prod's speeches are from the <a href="https://pub.colonq.computer/~prod/toy/glossary#learn-the-language">progenitor zone</a>, please refer to the appropriate section in the glossary there (also written by me).
    ul 
        li <em>"core"</em>: short of "this is me core", something that you are aesthetically attracted to.
        li <em>floor</em>: a short, more stoic version of losing status (most likely VIP). "falling to the floor (of social hierarchy)"
        li <em>something of this nature</em> / <em>sotn</em>: can mean whatever it wants it to mean.
        li <em>The Graph</em>: the graph of cyberspace streamers with "software and game development" as x axis and "gay energy" as y axis. this is also where <em>less code more gay</em> (where prod is situated at) comes from.
        li <em>witscord</em> (or wcord): the mystical land where prod steals all their jokes from (referred to as <em>witpost</em> / <em>wp</em>). the best of them can be found in <a href="https://mas.to/@witscord">masting done</a>.
        li: ul 
            li <em>stazzy</em>: wcord variant of the northernlion "+2", 5 stazzies puts the post on <em>n-stazzy</em>, a starboard equivalent. as opposed to "<em>stizzy</em>".
            li <em>elephant</em>: 5 elephant emojis puts your post in <em>the pipe</em>, a <a href="https://mas.to/@witscord">mastodon bot</a>, originally for puzzle showcase kinda purposes but became similar to stazzy. as opposed to <em>mammoth</em>, neutral offshoots include <em>ox</em>, <em>hippo</em> and basically every four legged animals.
            li <em>casual-two</em>: channel that usually has the best jokes/deepest discussions.
            li <em>1d1p</em> (or one day one puzzle): "weekly" "puzzle" "competition" for thinky kids, a wcord puzzlemaking and solving event where people submit puzzles. see <a href="https://onedayonepuzl.web.app/">the 1d1p website</a> for puzzles.
            li <em><a href="https://looksy.kro.kr/">looksy</a></em>, <em><a href="https://alith.itch.io/what-the-witness">wtw</a></em>, <em><a href="https://beesnation.github.io/witness">beesnation</a></em> and <em><a href="https://thejonymyster.neocities.org/">lopsy</a></em>: custom symbols clone of witness by various wcord members.
            li <em>cryptic crossword</em>: a variant of crossword where clues follow a specific formula. if you see a (number), this is most likely what theyre referring to.
    h2 Videos 
    p videos 
    c Season 0
    h3 testing in prod 
    p The One and Only Season we are in currently. we focus on getting the core part of the stream up (channel points, emotes, and basic redemptions). we stream once a day for 2 hours, no collabs, no wacky events. however this promise does not last long as we do stream more than once a day and more than 2 hours and collabs and wacky events basically every week lmao.
    c Testing in Prod 0
    h4 the incident
    p: b VOD unrecoverable - sorry!
    p: u everything breaks and prod doesnt have a model, they complain for a bit and log off lol
    c Testing in Prod 1
    h4 prod z fighting 
    yt mzi5EmdsbXU
    yt 6xUubvDXpTc
    p: u actual debut stream, we introduce ourselves and discover the "z-fighting mode".
    c Testing in Prod 2
    h4 being The Wired is a gender
    yt Qv6LhbSdpS8
    p: u The Graph is discovered here, we also make !removetriangle.
    c Testing in Prod 3
    h4 all of the streams budget went to infra team
    yt Ng8ZIi4BRJI
    p: u we yap for 4 hours, lay out our plans for future broadcasts and then play noita
    c Testing in Prod 4
    h4 i usually go in at an angle too
    yt LVhiL4ARhGA
    yt Vnv7Ge4fIHI
    p: u we make !song and somehow streams for 6 hours. we declare victory
    c Testing in Prod 5
    h4 so deep (briny)
    yt Mudr4UPRo5U
    p: u fucked up prod fixes fucked up bug and finishes up the song mode
    c Testing in Prod 6
    h4 Things definitely need to be done : FUMO
    yt U60MaOeC2jY
    p: u tbd
    c Testing in Prod 7
    h4 you gotta grind your throat 
    yt 2NGZba17Ylo
    p: u tbd
    div#toc-wrapper
        h2(style="padding: 16px; cursor: pointer;" class="noscroll" onclick="toggleTOC()") Warp Zone
        div#toc-outer: div#toc
    #footnotes 
        h2 Footnotes
        p You're not supposed to see this unless you have nojs lol hello nojser 
        p These are footnotes to underlined texts
        .card
            h3 pondering...
            p You have Stopped Seeing, and Started Looking. You feel zooted...
        .card
            h3 Stream Dev
            p at the time (Season 0), we mostly focus on stream overlay dev (sort of). in the future, we may expand into other types of making stuff like art, video editing, or even game dev.
        .card 
            h3 How to Join IRC
            p see <a href="https://pub.colonq.computer/~fabius/pages/irc.html">the pubnix guide</a> by noted clonkhead fabius for how to join IRC.
            h3 Twitch Chat is actually IRCv3 
            p this also means we have <em>IRC to IRC communication</em> kind of (right now stream chat doesnt get picked up by clonk irc, but the other way works and discord gets picked up by both).
        .card
            h3 specs
            ul 
                li basic structure is something like <em>[instrument][global modifier][notes]</em> separated by the <em>|</em> (vertical bar) character.
                li currently available instruments are <em>sine</em>, <em>tri</em>, <em>sq50</em> and <em>drum</em>. when instruments are not provided (such as the original bells text), it defaults to <em>sine</em>.
                li global modifiers apply to every notes in this track. by default, C is C4, and BPM is 75.
                li: ul 
                    li octave control: <em>'</em> increases default octave by 2, <em>,</em> decreases by 2 and <em>"</em> increases by 1. this can be combined like <em>",</em> to -1 octave.
                    li bpm control: <em>;</em> to double bpm, <em>:</em> to triple, <em>-</em> to half bpm, <em>=</em> to third. manually typing numbers bells style works as well.
                    li microtones support: <em>%</em> followed by number to set equal temperment that starts on C. for example, <em>%31</em> (31EDO) would make <em>C~F6#</em> a single octave.
                    li <em>&amp;</em> copies the previous track's global modifiers. useful for multi tracks with same bpm.
                    li <em>.</em> is a blank modifier, and is used to separate instrument from notes. when instrument name is blank, the song gets saved as the "notes" as a title. the song such as <em>.title|sine.[notes...]</em> can be later used like <em>!song title</em> as a shorthand.
                li notes are composed of the tone and modifiers. <em>[</em> character creates a group of tones that plays at the same time and all gets the same modifier. for example, <em>[CEG=</em> plays a 3 beat long C major chord.
                    li available notes are <em>C D E F G A B</em>, black keys can be expressed by <em>C# D# F# G# A#</em> or alternatively <em>X S R T Q</em> as shorthand. rests are expressed as <em>/</em>.
                    li lowercase letters are uppercase letters +1 octaves.
                    li there's also <em>J K L M N H I</em> as C3~B3, <em>Y U O P W</em> as C#3~A#3, <em>j k l m n h i</em> as C6~B6 and <em>y u o p w</em> as C#6~A#6. 
                    li octave control from global modifier also works here, but also bells-style number notation works (<em>C#2</em> is the same as <em>X,</em>)
                    li beats control from global modifier works as well, with <em>;:</em> shortening the beats and <em>-=</em> lengthening it. <em>C;=</em> would be 1.5 beats, and 0.3 seconds on 75 BPM (default).
                    li beats can also be added or deleted arithmetically by <em>+</em>, <em>~</em> (addition) or <em>_</em> (subtraction). where every term begins with 1 beat. <em>C++</em> becomes "C for 1 + 1 + 1 = 3 beats", <em>C=+_:-</em> becomes "C for 3 + 1 - 2/3 = 10/3 beats".
                    li much like octaves, beats can be specified by <em>@</em> followed by a number. like <em>C#@5.5</em>.
                    li <em>&lt;</em> and <em>&gt;</em> drops the attack and release of each note respectively, allowing for slide type action.
                    li <em>!</em> is a special modifier in that the note doesn't "advance the staff line", allowing for notes to overlap with different note lengths and whatnot without multi tracks. see the blank arpeggio (<em>W@12!/C@11!/S@10!/Q@9 P@12!/C@11!/S@10!/T@9</em>) as an example.
                    li <em>?</em> is a special note (NOT a modifier) that takes in global modifier as a modifier. this changes the global modifier mid staff, allowing for bpm shifts and such.
                    li <em>]</em> stops modifiers (exists for bells compat).
        .card 
            p since prod is korea, Twitch Korea doesnt save VODs despite the setting being on and therefore it is gone. i will recap as detailed as possible to compensate.
            p after 1(+5/7) week of unhealthy gamer development, prod finally goes live for the first* time. and then everything goes to shit after.
            p chat stops working after the 10th message, everyone shows up as "prodzpod" (this is technically lore accurate maybe), prod haven't finished making the 3d model thing so its just a png (that doesnt move, worse than a pngtuber), everythings messed up.
            img(src="https://prod.kr/images/lore/0-1.png")
            p most of the discussions remains as part of the twitch-discord bridge that thankfully mostly worked.
            p prod complains about how they "planned everything and its all fucked up", then tries to showcase the gizmo, and then the stream dies upon !login. they boot it back up only for it to go off again when someone else tries logging in.
            p they fix like 1 minor issue and then the voice gives in because they were singing vocaloid songs while coding that entire week. they get sleeby and end stream like 90 minutes in. we raided <a href="https://twitch.tv/tyumici">tyumici</a>.
        .card
            p the debut stream happened. the model style appears, the gizmo is shown off, and some introduction happens.
            p we also discover the modal of "z-fighting", which probably will be a core part of the broadcast.
            p plenty of errors happen, and the creature gets sent to various inaccessible locations frequently. also the window title is broken. lol.
            p we raid <a href="https://www.twitch.tv/exodrifter_">exodrifter_</a> after talking about how i was tired when i first joined her stream and was kinda annoying lol
        .card 
            p today's accessory is a hastily put together "mushroom witch hat". the concept of a weekly accessory is brought up. the powerpoint docket becomes a regular thing after the positive reception from the first stream. 
            p pose system is shown off as well. the "cyberspace graph mode" is shown off, describing each corners of the gayness scale and softwareline meter.
            img(src="https://prod.kr/images/lore/2-1.png")
            p we also create the first ever general redeem: <button>!removetriangle [number]</button>, that removes a random number of triangles from the creature. creature becomes shambles quickly.
            p the websocket zone was bugged to hell though, spamming "what???" (also known as inaccessible code mode).
            p we talk about the progenitors, john react to the -1st session of prodzpod v scenario (the serendipidous collab) within <a href="https://www.twitch.tv/imgeiser">imgeiser</a>, and raid <a href="https://www.twitch.tv/digi_shell">digi_shell</a> with lcolonq in the chat, completing the trifecta.
        .card 
            p we lay out our Grand Plan - the temporal list. the eternal formula to HAPPINESS, some may say. the details of this list is still changing and growing with the input of all of you, so please comment if you have a sick idea or feel like some priority shifting is needed.
            b SEASON 0: testing in prod 
            p we set up the infrastructure necessary to move forward: economy, emotes, achievements, and font renderer is in order.
            b SEASON 1: "z-fighting era"
            p we will be making chatters into customizable "desktop buddies" that can fight each other and roam around the screen.
            p we will also make prod desktop buddy into a real executable you can all utilize in your personal computer.
            p we will also try to move away from javascript, learning various new languages and trying them out by swapping parts of our infrastructure with one written with the new language.
            b EXTRA: "leveling up"
            p "level up"s will be an expensive redeem that multiple people have to redeem to activate. this is done as a way to gauge the sustainability of the broadcast.
            p upon "leveling up", major additions will happen to the stream. this can be a shift in schedule, some new major goal or format, or some kind of special events.
            p in terms of what we did today, we yapped for <b>4 hours</b> and then played a bit of noita. we raided <a href="https://twitch.tv/UWOSLAB">the slab</a> i think
        .card 
            p the broadcast gets somehow even longer as prod shows off 3 videos they edited and proceeds to create <b>!song</b>, a superset of <a href="https://pub.colonq.computer/~bezelea/bells">Bells of Bezelea</a>. programming under duress happens as the broadcast becomes clonk level long and prod reaches the breaking point almost. we manage to play SICP, find some critical design flaw and emergency evacuate onto <a href="https://www.twitch.tv/hexadigital">hexadi</a> lands.
        .card 
            p tbd
            p we raid <a href="https://www.twitch.tv/dantedaedalusch">dante daedalus mode</a>
        .card 
            p tbd
            p we raid <a href="https://www.twitch.tv/keitaroch">keitaro channel (ch)</a>
        .card 
            p tbd
            p we raid <a href="https://www.twitch.tv/mdxcai">medical doctor x(shipping) cai channel</a>
block postbody 
    style.
        li { margin-left: 32px; }
        c + h2, c + h3, c + h4 { margin-top: 0; }
        c { margin-top: 3.33em; display: block; }
        iframe {
            width: min(720px, calc(100vw - 128px));
            height: min(calc(720px * 9 / 16), calc((100vw - 128px) * 9 / 16));
        }
        #toc-wrapper {
            background-color: var(--background);
            border: 8px var(--text) solid;
            position: fixed;
            top: 8px;
            right: 8px;
            text-align: center;
            padding: 8px;
            border-radius: 8px;
            opacity: 0.5 !important;
        }
        #toc-wrapper:hover, #toc-wrapper:has(#toc.active) {
            opacity: 1 !important;
        }
        #toc-outer {
            max-height: calc(100vh - 100px);
            overflow-y: auto;
        }
        #toc {
            overflow: hidden;
            transition: all 0.5s;
            text-align: left;
        }
        #toc-wrapper h2 {
            margin: 0;
        }
        #toc a {
            text-decoration: none;
        }
    script.
        addEvent('onload', () => {
            for (let yt of q('yt')) {
                yt.innerHTML = `<iframe src="https://www.youtube.com/embed/${yt.innerText}" frameborder="0" allow="autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>`
            }
            let source = q('u'); footnotes = q('#footnotes .card').map(x => x.outerHTML);
            for (let i = 0; i < source.length; i++) source[i].outerHTML = `<button class="footnote" onclick="toggleFootnote(${i}, this)"><u>${source[i].innerHTML}</u></button>`;
            removeAllChildren('footnotes');
            const WEEKDAY_FROM = { 'thursday': '01', 'friday': '02', 'saturday': '03', 'sunday': '04', 'monday': '05', 'tuesday': '06', 'wednesday': '07' }
            const WEEKDAY_TO = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            for (let el of document.getElementsByClassName('time')) {
                let [day, time] = split(el.innerText, " ", 1);
                let date = new Date(`1970-01-${WEEKDAY_FROM[day.toLowerCase()]} ${time}`)
                el.innerText = `${WEEKDAY_TO[date.getDay()]} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')} (in your timezone!)`;
            }
            for (let el of Array.from(document.querySelectorAll('.body > h2, .body > h3, .body > h4, .body > h5, .body > h6'))) {
                let id = el.innerText.trim().toLowerCase().replace(/[^\w\s]+/g, '').replace(/\s+/g, '-');
                el.with('id', id);
                insertElement('a', 'toc', null, ''.padStart(Number(el.tagName[1]) * 4 - 8).replace(/ /g, '&nbsp;') + el.innerHTML).with('style', 'display: block;').with('href', '#' + id);
            }
            height = e('toc').offsetHeight + 'px';
            e('toc').style.maxHeight = '0px';
            setTimeout(() => { for (let el of Array.from(document.getElementsByClassName("async"))) el.setAttribute("src", el.getAttribute("id")); }, 1000);
            busy = false;
        });

        function toggleFootnote(i, source) {
            if (e(`footnote-${i}`)) removeElement(`footnote-${i}`);
            else {
                let el = insertElement('div', null, null, footnotes[i]).with('id', `footnote-${i}`);
                while (source.parentElement.tagName !== 'DIV') source = source.parentElement;
                setNextSibling(el, source);
            }
        }
        
        let busy = true;
        let tocToggled = false;
        function toggleTOC() {
            if (busy) return;
            tocToggled = !tocToggled;
            e('toc').classList.toggle('active');
            e('toc').style.maxHeight = tocToggled ? height : '0px';
        }